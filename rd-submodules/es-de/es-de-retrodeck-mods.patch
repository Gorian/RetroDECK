diff -au1r emulationstation-de/es-app/src/guis/GuiMenu.cpp emulationstation-de/es-app/src/guis/GuiMenu.cpp
--- emulationstation-de/es-app/src/guis/GuiMenu.cpp	2023-04-12 09:08:12.394935336 -0400
+++ emulationstation-de/es-app/src/guis/GuiMenu.cpp	2023-04-12 16:25:04.618753274 -0400
@@ -10,2 +10,3 @@
 #include "guis/GuiMenu.h"
+#include "utils/PlatformUtil.h"
 
@@ -66,2 +67,4 @@
 
+    addEntry("RETRODECK CONFIGURATOR", 0x777777FF, false, [this] { openRetroDeckConfigurator(); });
+
     if (!Settings::getInstance()->getBool("ForceKiosk") &&
@@ -69,3 +72,3 @@
 #if defined(__APPLE__)
-        addEntry("QUIT EMULATIONSTATION", 0x777777FF, false, [this] { openQuitMenu(); });
+        addEntry("QUIT RETRODECK", 0x777777FF, false, [this] { openQuitMenu(); });
 #else
@@ -74,3 +77,3 @@
         else
-            addEntry("QUIT EMULATIONSTATION", 0x777777FF, false, [this] { openQuitMenu(); });
+            addEntry("QUIT RETRODECK", 0x777777FF, false, [this] { openQuitMenu(); });
 #endif
@@ -1704,2 +1707,15 @@
 
+void GuiMenu::openRetroDeckConfigurator()
+{
+    // Launch the configurator.sh script
+    std::string command;
+    std::string startDirectory;
+    bool runInBackground;
+    command = "bash /app/tools/configurator.sh";
+    startDirectory = "/app/tools";
+    runInBackground = false;
+    int result = Utils::Platform::launchGameUnix(command, startDirectory, runInBackground);
+    // You can add any checks for the script's outcome here.
+}
+
 void GuiMenu::openQuitMenu()
@@ -1732,3 +1748,3 @@
         });
-        auto quitText = std::make_shared<TextComponent>("QUIT EMULATIONSTATION",
+        auto quitText = std::make_shared<TextComponent>("QUIT RETRODECK",
                                                         Font::get(FONT_SIZE_MEDIUM), 0x777777FF);
diff -au1r emulationstation-de/es-app/src/guis/GuiMenu.h emulationstation-de/es-app/src/guis/GuiMenu.h
--- emulationstation-de/es-app/src/guis/GuiMenu.h	2023-04-12 09:08:12.394935336 -0400
+++ emulationstation-de/es-app/src/guis/GuiMenu.h	2023-04-12 09:33:25.023871033 -0400
@@ -46,2 +46,3 @@
     void openOtherOptions();
+    void openRetroDeckConfigurator();
     void openQuitMenu();
diff -au1r emulationstation-de/es-app/src/views/ViewController.cpp emulationstation-de/es-app/src/views/ViewController.cpp
--- emulationstation-de/es-app/src/views/ViewController.cpp	2023-06-26 09:37:59.297437013 -0400
+++ emulationstation-de/es-app/src/views/ViewController.cpp	2023-06-26 09:38:18.410322017 -0400
@@ -85,9 +85,7 @@
 {
-    mNoGamesErrorMessage = "NO GAME FILES WERE FOUND. EITHER PLACE YOUR GAMES IN "
-                           "THE CURRENTLY CONFIGURED ROM DIRECTORY OR CHANGE "
-                           "ITS PATH USING THE BUTTON BELOW. OPTIONALLY THE ROM "
-                           "DIRECTORY STRUCTURE CAN BE GENERATED WHICH WILL "
-                           "CREATE A TEXT FILE FOR EACH SYSTEM PROVIDING SOME "
-                           "INFORMATION SUCH AS THE SUPPORTED FILE EXTENSIONS.\n"
-                           "THIS IS THE CURRENTLY CONFIGURED ROM DIRECTORY:\n";
+    mNoGamesErrorMessage = "RETRODECK COULD NOT FIND ANY ROM FILES. "
+                           "PLEASE PLACE YOUR ROM FILES INTO THE APPROPRIATE "
+                           "SYSTEM SUBFOLDER IN THE CONFIGURED ROM DIRECTORY "
+                           "AND RUN RETRODECK AGAIN TO SCAN YOUR LIBRARY.\n"
+                           "THE CURRENTLY CONFIGURED ROM DIRECTORY IS:\n";
 
@@ -100,90 +98,3 @@
     mNoGamesMessageBox = new GuiMsgBox(
-        HelpStyle(), mNoGamesErrorMessage + mRomDirectory, "CHANGE ROM DIRECTORY",
-        [this] {
-            std::string currentROMDirectory;
-#if defined(_WIN64)
-            currentROMDirectory = Utils::String::replace(FileData::getROMDirectory(), "/", "\\");
-#else
-            currentROMDirectory = FileData::getROMDirectory();
-#endif
-            if (Settings::getInstance()->getBool("VirtualKeyboard")) {
-                mWindow->pushGui(new GuiTextEditKeyboardPopup(
-                    HelpStyle(), 0.0f, "ENTER ROM DIRECTORY PATH", currentROMDirectory,
-                    [this](const std::string& newROMDirectory) {
-                        Settings::getInstance()->setString("ROMDirectory",
-                                                           Utils::String::trim(newROMDirectory));
-                        Settings::getInstance()->saveFile();
-#if defined(_WIN64)
-                        mRomDirectory =
-                            Utils::String::replace(FileData::getROMDirectory(), "/", "\\");
-#else
-                        mRomDirectory = FileData::getROMDirectory();
-#endif
-                        mNoGamesMessageBox->changeText(mNoGamesErrorMessage + mRomDirectory);
-                        mWindow->pushGui(new GuiMsgBox(HelpStyle(),
-                                                       "ROM DIRECTORY SETTING SAVED, RESTART\n"
-                                                       "THE APPLICATION TO RESCAN THE SYSTEMS",
-                                                       "OK", nullptr, "", nullptr, "", nullptr,
-                                                       true, true));
-                    },
-                    false, "SAVE", "SAVE CHANGES?", "Currently configured path:",
-                    currentROMDirectory, "LOAD CURRENTLY CONFIGURED PATH",
-                    "CLEAR (LEAVE BLANK TO RESET TO DEFAULT PATH)"));
-            }
-            else {
-                mWindow->pushGui(new GuiTextEditPopup(
-                    HelpStyle(), "ENTER ROM DIRECTORY PATH", currentROMDirectory,
-                    [this](const std::string& newROMDirectory) {
-                        Settings::getInstance()->setString("ROMDirectory",
-                                                           Utils::String::trim(newROMDirectory));
-                        Settings::getInstance()->saveFile();
-#if defined(_WIN64)
-                        mRomDirectory =
-                            Utils::String::replace(FileData::getROMDirectory(), "/", "\\");
-#else
-                        mRomDirectory = FileData::getROMDirectory();
-#endif
-                        mNoGamesMessageBox->changeText(mNoGamesErrorMessage + mRomDirectory);
-                        mWindow->pushGui(new GuiMsgBox(HelpStyle(),
-                                                       "ROM DIRECTORY SETTING SAVED, RESTART\n"
-                                                       "THE APPLICATION TO RESCAN THE SYSTEMS",
-                                                       "OK", nullptr, "", nullptr, "", nullptr,
-                                                       true));
-                    },
-                    false, "SAVE", "SAVE CHANGES?", "Currently configured path:",
-                    currentROMDirectory, "LOAD CURRENTLY CONFIGURED PATH",
-                    "CLEAR (LEAVE BLANK TO RESET TO DEFAULT PATH)"));
-            }
-        },
-        "CREATE DIRECTORIES",
-        [this] {
-            mWindow->pushGui(new GuiMsgBox(
-                HelpStyle(),
-                "THIS WILL CREATE DIRECTORIES FOR ALL THE\n"
-                "GAME SYSTEMS DEFINED IN es_systems.xml\n\n"
-                "THIS MAY CREATE A LOT OF FOLDERS SO IT'S\n"
-                "ADVICED TO REMOVE THE ONES YOU DON'T NEED\n\n"
-                "PROCEED?",
-                "YES",
-                [this] {
-                    if (!SystemData::createSystemDirectories()) {
-                        mWindow->pushGui(new GuiMsgBox(HelpStyle(),
-                                                       "THE SYSTEM DIRECTORIES WERE SUCCESSFULLY\n"
-                                                       "GENERATED, EXIT THE APPLICATION AND PLACE\n"
-                                                       "YOUR GAMES IN THE NEWLY CREATED FOLDERS",
-                                                       "OK", nullptr, "", nullptr, "", nullptr,
-                                                       true));
-                    }
-                    else {
-                        mWindow->pushGui(new GuiMsgBox(HelpStyle(),
-                                                       "ERROR CREATING THE SYSTEM DIRECTORIES,\n"
-                                                       "PERMISSION PROBLEMS OR DISK FULL?\n\n"
-                                                       "SEE THE LOG FILE FOR MORE DETAILS",
-                                                       "OK", nullptr, "", nullptr, "", nullptr,
-                                                       true));
-                    }
-                },
-                "NO", nullptr, "", nullptr, true));
-        },
-        "QUIT",
+        HelpStyle(), mNoGamesErrorMessage + mRomDirectory, "QUIT",
         [] {
diff -au1r emulationstation-de/es-core/src/Window.cpp emulationstation-de/es-core/src/Window.cpp
--- emulationstation-de/es-core/src/Window.cpp	2023-04-12 09:08:12.398268670 -0400
+++ emulationstation-de/es-core/src/Window.cpp	2023-04-14 11:03:48.261309278 -0400
@@ -179,3 +179,3 @@
     progressBarRect.barPosY += borderThickness;
-    progressBarRect.color = 0x79010FFF;
+    progressBarRect.color = 0xC858E6FF;
     mProgressBarRectangles.emplace_back(progressBarRect);